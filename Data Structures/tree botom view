// C program to print left view of Binary Tree
#include<iostream>
#include<map>
#include<cmath>
#include<bits/stdc++.h>

using namespace std; 
class node
{
	public:
		int data;
		node *left;
		node * right;
		
		node(int data)
		{
			this->data = data;
			left = NULL;
			right = NULL;
		}

};
void display(node *root)
{
	if(root)
	{
		display(root->left);
		cout<<root->data<<" ";
		display(root->right);
	}
}
map<int,int> bottomviewuntil(node* root,int level,int depth,map<int,int> &m)
{
		if(root==NULL)
			return m;	
		if((m.find(level) == m.end()) || (m.find(level)!=m.end() && depth > abs(level)+1))
			m[level] = root->data;
		if(root->left!=NULL)
			topviewuntil(root->left,level-1,depth+1,m);
		if(root->right!=NULL)
			topviewuntil(root->right,level+1,depth+1,m);
		
		return m;
}
void bottomview(node *root)
{
	map<int,int> m;
	int level=0;
	int depth=0;
	m=topviewuntil(root,level,depth,m);
	map<int,int> :: iterator itr;
	for(itr = m.begin();itr!=m.end();itr++)
	cout<<itr->second<<" ";
}
int main()
{
	node *root = new node(20);
	root->left = new node(8);
	root->right= new node(22);
	root->left->right=new node(3);
	root->left->left = new node (5);
	root->left->right->left = new node(10);
	root->left->right->right = new node(14);
	root->right->right = new node(25);
	bottomview(root);
	return 0;
}
